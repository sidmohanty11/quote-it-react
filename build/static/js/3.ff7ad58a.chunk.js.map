{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useHttp","addComment","sendRequest","status","error","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","data","cmts","useCallback","length","onClick","HighlightedQuote","quote","author","QUOTES","QuoteDetail","match","useRouteMatch","params","find","q","getSingleQuote","path","exact","to","url"],"mappings":"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","file":"static/js/3.ff7ad58a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { addComment } from '../../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { onAddedComment } = props;\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (<div className='centered'><LoadingSpinner /></div>)}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoteId} = params;\n\n  const { sendRequest, status, data } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addComment = useCallback(() => {\n      sendRequest(quoteId);\n    }, [sendRequest, quoteId],\n  );\n\n  let cmts;\n\n  if (status === 'pending') {\n    cmts = <div className='centered'><LoadingSpinner /></div>;\n  }\n\n  if (status === 'completed' && (data && data.length>0)) {\n    cmts = <CommentsList comments={data} />;\n  }\n\n  if (status === 'completed' && (!data || data.length === 0)) {\n    cmts = <p className='centered'>No Comments till now.</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addComment} />}\n      {cmts}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p><i>\"{props.text}\"</i></p>\n      <figcaption>-{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\nconst QUOTES = [\n    { id: 'q1', author: 'Sid_11', text: 'lololololol' },\n    { id: 'q2', author: 'Sid_11', text: 'radhe radhe' },\n];\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch();\n    const params = useParams();\n    const { quoteId } = params;\n    const quote = QUOTES.find(q => q.id === params.quoteId);\n\n    const { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if (status === 'pending') {\n        return (<div className='centered'>\n            <LoadingSpinner />    \n        </div>)\n    }\n\n    if (error) {\n        return <p className='centered'>{error}</p>\n    }\n\n    if (!data.text) {\n        return <p className='centered'>No Quote Found!</p>\n    }\n    \n    return (\n        <>\n            <HighlightedQuote text={data.text} author={data.author} />\n            <Route path={`${match.path}`} exact>\n                <div className='centered'>\n                    <Link to={`${match.url}/comments`} className=\"btn--flat\">Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </>\n    )\n}\n\nexport default QuoteDetail;\n"],"sourceRoot":""}